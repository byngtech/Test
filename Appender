apiVersion: v1
kind: ConfigMap
metadata:
  name: venafi-ca-bundle
  namespace: istio-system
data:
  venafi-ca.crt: |
    -----BEGIN CERTIFICATE-----
    <venafi-intermediate-certificate>
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    <company-root-certificate>
    -----END CERTIFICATE-----
---
apiVersion: batch/v1
kind: Job
metadata:
  name: add-ca-to-secret
  namespace: istio-system
spec:
  template:
    spec:
      serviceAccountName: cert-updater
      containers:
      - name: update-secret
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Get the Venafi CA bundle and encode it
          CA_BUNDLE=$(cat /venafi-ca/venafi-ca.crt | base64 -w 0)
          
          # Check if ca.crt already exists in the secret
          if kubectl get secret gateway-tls -n istio-system -o jsonpath='{.data.ca\.crt}' > /dev/null 2>&1; then
            echo "ca.crt field exists, replacing it..."
            kubectl patch secret gateway-tls -n istio-system \
              --type='json' \
              -p="[{'op': 'replace', 'path': '/data/ca.crt', 'value':'${CA_BUNDLE}'}]"
          else
            echo "ca.crt field does not exist, adding it..."
            kubectl patch secret gateway-tls -n istio-system \
              --type='json' \
              -p="[{'op': 'add', 'path': '/data/ca.crt', 'value':'${CA_BUNDLE}'}]"
          fi
          
          echo "Successfully added ca.crt to secret gateway-tls"
          
          # Verify the update
          kubectl get secret gateway-tls -n istio-system -o jsonpath='{.data}' | jq 'keys'
        volumeMounts:
        - name: venafi-ca
          mountPath: /venafi-ca
      volumes:
      - name: venafi-ca
        configMap:
          name: venafi-ca-bundle
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-updater
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-updater
  namespace: istio-system
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "patch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-updater
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-updater
subjects:
- kind: ServiceAccount
  name: cert-updater
  namespace: istio-system
